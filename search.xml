<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>那么微弱的“白日焰火”</title>
      <link href="/reading/Black%20Coal,Thin%20Ice-1552717523.html"/>
      <url>/reading/Black%20Coal,Thin%20Ice-1552717523.html</url>
      
        <content type="html"><![CDATA[<p>昨晚动用了一个月一次熬夜看电影的机会，还好<strong>《白日焰火》</strong>没让我失望😁，好电影而不出名可惜了。</p><p>一部优秀的电影，总是能引人深思，给不同的人能够有不同的理解。同时，优秀的电影，镜头语言会让人回味无穷，如张自力踢的那个空啤酒瓶，顺坡一直向下滑动，一是能表明工厂的管理不严，才能为梁志军抛尸提供条件，二是暗示张自立的命运走向下坡，因为后来成了保安。</p><p> 镜头语言很多，留着以后慢慢品味，而整个剧情的理解亦有很多，而更考研逻辑和人情我的推测大致如下🙃：</p><p>1、居委会的第一段戏，大妈一上来就说最近来了几个南方人，不像干传销的，说明当时的环境对待南方人是有地域歧视的，第二段戏中有一匹马没有地方去，被接到居委会，而大妈在此景下跟王队长说洗衣店老板跟女主的关系，暗指是干洗店老板收留了来自南方的女主，同时也符合更加女主的形象气质（不像黑龙江人）。</p><p>2、妓女每次在车上换衣服，而没发生关系，揭示了老板的性无能，女主在其店里被猥亵，梁志军可能知道，但是念及收留女主之恩，并且没有触及梁志军底线，而放了他。</p><p>3、在宾馆的戏中，梁志军几次想搂着女主而又放下，并对女主说“我被发现了”，女主此时的表情是冷漠的。由此，我推测，梁一开始就是单方面“喜欢”女主，并一直在监视女主的活动，时不时联系，不让女主跟别的男人有接触，并且程度是逐步加深的，第一个开始是快要结婚时候，将其杀害，第二个就是刚恋爱。可能，男主自认为爱着女主吧，这也是他被出卖时，路过女主旁边而没用采取复仇行为的原因。</p><p>4、洗衣店老板，在最后的镜头中，给女主送围巾，我猜他是真不知道女主的杀人案，想要猥亵女主是一方面，另一方面也是真正的觉得女主可怜，否则不会留其继续上班，没有因为女主跟三桩命案有关，而赶她走。同时也回应张力军打趣说开夫妻店，他说的“我看得上人家，人家看不上我”，暗指自己没用性能力。</p><p>5、<strong><em>剧情的起点来了</em></strong>，随着找到白日焰火的老板娘推测到，当初迷惑警察的尸体就是那个皮氅的主人。时间来到1999年，女主孤生一人来到黑龙江，被洗衣店老板收留，在此时认识了梁，而梁沉默寡言，两人也算同病相怜，梁喜欢吴，而吴只是将其当作朋友（备胎）。再其后，女主因为刚来洗衣店，不熟练，洗坏了一件皮氅。她无力偿还，而对方又刚好是男人，只能把自己给对方来换回平静生活，将其带到某处地方发生关系后，皮氅的主人想要再来一次，而此时的女主不愿意，并做出了强烈反抗，一直“担心”而监视她的梁实在忍受不了，将其杀害。女主配合梁完成了分尸谎言，从而成为了“杀人犯”，并一直活在梁的阴影中。</p><p>6、张自力到来给已经麻木的女主身边，给她带来了一丝希望。在经历警告过张自力，不要跟着她之后，张说出滑冰鞋，这一重要信息，女主推测出张自力便衣“警察”的身份，她想利用这个警察能够抓住梁，从而获得解放，她知道梁因为喜欢女主，而不会将其供出。在梁被击毙之后，女主第二天进店时就涂了口红，她觉得她可以过有色彩的生活了。而后来，洗衣店老板有意还是无意的提醒下，张找到了白日焰火的老板娘，他知道女主肯定也参与了犯罪，张自力想要女主说出当年的实情，他就可以凭借又一新功恢复警察并可能晋升。这时的女主，原本想要跟着张自力过平凡的生活，在张自力叫其自首时，顿时绝望，索性成全了张自力的野心，这可以在最后女主指认现场时对环境的生疏以及在警车上那两行死寂的泪水可以看出。</p><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>之所以叫《白日焰火》，我想第一层原因是显而易见的，白日焰火夜总会的老板的皮氅被女主洗坏了，是整个电影剧情发展的起点，这是显而易见的。第二层原因是，张自力为了功劳让女主自首，而女主成全他的野心，他内心极度扭曲，在白天给女主放烟花，一来表示谢意，二来庆祝自己，最后到舞厅，陷入了癫狂。</p><p>以上是我基础国内版（看完才知道，还有国内删除不少镜头😭），得出的我能理解的合理的解释，但是感觉洗衣店老板的角色没有这么简单，因为给张自力皮氅的时候，就直接从台下拿出来，并且里面已经准备好了线索，看着像是有意给张自力提供的，但是我却无法将这个举动拿到整个剧情中，对我来说好难过，也希望以后随着阅历的增长，以及看看未删减的剧情，我能给出跟好的解释😀，电影的乐趣，也莫过于此。</p><p>最近，韩国的李胜利事件这两天扯出一系列腐败，我国舆论普遍对韩国记者的职业操守表示钦佩，政权干预媒体，让有职业操守的媒体人都下岗了，直到朴槿惠快要下台时才有转机。</p><p><strong><em>真相是什么</em></strong>？真相一定要符合大部分人的利益，或者说是符合有绝对权力人的利益。就像白日焰火里1999年死的夜总店老板被梁志军分尸后，仅凭当时的小王看到了身份证就证明死者是梁志军，这不是很草率嘛。当时的碎尸案弄的整个黑龙江人心惶惶，急需快速解决，维护社会安定，这符合当时当局者的利益，所以就认定尸体是梁志军的。</p><p>老板娘后来说，第二年去报警说丈夫不见了，如果碎尸案没有定案，是否会被某一角落里的刑警联系起来呢，从而抓住梁志军，也不会发生后面两起分尸案了。</p><p>说回韩国，不正是后面的总统想要上台，才会允许韩国媒体报道朴槿惠的闺蜜们事件，世越号事件嘛，当时的政治力量，可能已经是朴槿惠方处在下风吧，报道朴槿惠和其前任的丑闻，符合现任总统的利益。（我平时不说这些哒，感觉像中年油腻男😂）</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python多线程拷贝文件夹</title>
      <link href="/backend/copy%20dir%20by%20Multiple%20processes-1552445582.html"/>
      <url>/backend/copy%20dir%20by%20Multiple%20processes-1552445582.html</url>
      
        <content type="html"><![CDATA[<h4 id="进程vs程序"><a href="#进程vs程序" class="headerlink" title="进程vs程序"></a>进程vs程序</h4><p>程序：编写的具有一定功能的代码</p><p>进程：运行的代码（区别是环境+是否正在运行）</p><h4 id="python中进程的三个知识"><a href="#python中进程的三个知识" class="headerlink" title="python中进程的三个知识"></a>python中进程的三个知识</h4><p>1.os模块的fork()方法</p><p>2.multiprocessing模块</p><p>3.数据共享multiprocessing模块的Manager</p><h4 id="进度显示"><a href="#进度显示" class="headerlink" title="进度显示"></a>进度显示</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#执行时判断进程，%在输出需要用两个，因为转义字符</span><br><span class="line">    num = <span class="number">0</span> </span><br><span class="line">    allFilenum = len(fileNames)</span><br><span class="line">    <span class="keyword">while</span> num&lt;allFilenum:</span><br><span class="line">        queue.get()</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">        copyRate = num/allFilenum </span><br><span class="line">        print(<span class="string">"\r进度:%.2f%%"</span>%(copyRate*<span class="number">100</span>),end=<span class="string">""</span>)</span><br><span class="line">        # end="表示不换行"</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"已完成"</span>)</span><br></pre></td></tr></table></figure><p>核心就是先获取总任务的文件数，再用完成的文件/总任务</p><p>特别注意的是，他是一直在打印进度，不过不换行，另再输出“%”时，需要注意转义字符。</p><p>核心代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool,Manager</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">def copyFile(name,oldFolderName,newFolderName,queue):</span><br><span class="line">    fr = open(oldFolderName+<span class="string">"/"</span>+name)</span><br><span class="line">    fw = open(newFolderName+<span class="string">"/"</span>+name,<span class="string">"w"</span>)</span><br><span class="line"></span><br><span class="line">    content = fr.read()</span><br><span class="line">    fw.write(content)</span><br><span class="line">    </span><br><span class="line">    fr.close()</span><br><span class="line">    fw.close()</span><br><span class="line"></span><br><span class="line">    queue.put(name)</span><br><span class="line"></span><br><span class="line"># 类似其他语言的入口函数，增强可读性 </span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    #用户输入当前目录下需要拷贝的文件夹名</span><br><span class="line">    oldFolderName = input(<span class="string">"请输入需要拷贝的文件夹的名字："</span>)</span><br><span class="line"></span><br><span class="line">    #创建新文件夹</span><br><span class="line">    newFolderName = oldFolderName + <span class="string">"副本"</span></span><br><span class="line">    os.mkdir(newFolderName)</span><br><span class="line"></span><br><span class="line">    #获取old文件夹中所有的文件名字 </span><br><span class="line">    fileNames = os.listdir(oldFolderName)</span><br><span class="line"></span><br><span class="line">    #多线程拷贝文件</span><br><span class="line">    pool = Pool(<span class="number">5</span>)</span><br><span class="line">    queue = Manager().Queue()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> fileNames:</span><br><span class="line">        pool.apply_async(copyFile,args=(name,oldFolderName,newFolderName,queue))</span><br><span class="line"></span><br><span class="line">    #执行时判断进程，%在输出需要用两个，因为转义字符</span><br><span class="line">    num = <span class="number">0</span> </span><br><span class="line">    allFilenum = len(fileNames)</span><br><span class="line">    <span class="keyword">while</span> num&lt;allFilenum:</span><br><span class="line">        queue.get()</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">        copyRate = num/allFilenum </span><br><span class="line">        print(<span class="string">"\r进度:%.2f%%"</span>%(copyRate*<span class="number">100</span>),end=<span class="string">""</span>)</span><br><span class="line">        # end="表示不换行"</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"已完成"</span>)</span><br><span class="line">    # pool.close()</span><br><span class="line">    # pool.join()</span><br><span class="line"></span><br><span class="line">#通过__name__这个内置变量，在程序运行是他的值是__main__</span><br><span class="line">#这样就只能在调用时执行其中代码，代替其他语言的入口函数</span><br><span class="line">#同时__name__在被其他模块引入时，值为当前的包的结构</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何理解Python中的&quot;入口函数&quot;</title>
      <link href="/backend/understand%20main()%20%20in%20Python-1552438702.html"/>
      <url>/backend/understand%20main()%20%20in%20Python-1552438702.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-摘要"><a href="#1-摘要" class="headerlink" title="1. 摘要"></a>1. 摘要</h2><p>通俗的理解<code>__name__ == &#39;__main__&#39;</code>：假如你叫小明.py，在朋友眼中，你是小明<code>(__name__ == &#39;小明&#39;)</code>；在你自己眼中，你是你自己<code>(__name__ == &#39;__main__&#39;)</code>。</p><p><code>if __name__ == &#39;__main__&#39;</code>的意思是：当.py文件被直接运行时，<code>if __name__ == &#39;__main__&#39;</code>之下的代码块将被运行；当.py文件以模块形式被导入时，<code>if __name__ == &#39;__main__&#39;</code>之下的代码块不被运行。</p><h2 id="2-程序入口"><a href="#2-程序入口" class="headerlink" title="2. 程序入口"></a>2. 程序入口</h2><p>对于很多编程语言来说，程序都必须要有一个入口，比如C，C++，以及完全面向对象的编程语言Java，C#等。如果你接触过这些语言，对于程序入口这个概念应该很好理解，C，C++都需要有一个main函数作为程序的入口，也就是程序的运行会从main函数开始。同样，Java，C#必须要有一个包含Main方法的主类，作为程序入口。</p><p>而Python则不同，它属于脚本语言，不像编译型语言那样先将程序编译成二进制再运行，而是动态的逐行解释运行。也就是从脚本第一行开始运行，没有统一的入口。</p><p>一个Python源码文件（.py）除了可以被直接运行外，还可以作为模块（也就是库），被其他.py文件导入。不管是直接运行还是被导入，.py文件的最顶层代码都会被运行（Python用缩进来区分代码层次），而当一个.py文件作为模块被导入时，我们可能不希望一部分代码被运行。</p><h3 id="2-1-一个-py文件被其他-py文件引用"><a href="#2-1-一个-py文件被其他-py文件引用" class="headerlink" title="2.1 一个.py文件被其他.py文件引用"></a>2.1 一个.py文件被其他.py文件引用</h3><p>假设我们有一个const.py文件，内容如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PI = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    print(<span class="string">"PI:"</span>, PI)</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"></span><br><span class="line"># 运行结果：PI: 3.1412345678</span><br></pre></td></tr></table></figure><p>现在，我们写一个用于计算圆面积的area.py文件，area.py文件需要用到const.py文件中的PI变量。从const.py中，我们把PI变量导入area.py：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> <span class="keyword">const</span> <span class="keyword">import</span> PI</span><br><span class="line"></span><br><span class="line">def calc_round_area(radius):</span><br><span class="line">    <span class="keyword">return</span> PI * (radius ** <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    print(<span class="string">"round area: "</span>, calc_round_area(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">运行结果：</span></span><br><span class="line"><span class="string">PI: 3.14</span></span><br><span class="line"><span class="string">round area:  12.56</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span><span class="number">123456789101112131415</span></span><br></pre></td></tr></table></figure><h3 id="2-2-修改const-py，添加if-name-quot-main-quot"><a href="#2-2-修改const-py，添加if-name-quot-main-quot" class="headerlink" title="2.2 修改const.py，添加if __name__ == &quot;__main__&quot;"></a>2.2 修改const.py，添加<code>if __name__ == &quot;__main__&quot;</code></h3><p>我们看到const.py中的main函数也被运行了，实际上我们不希望它被运行，因为const.py提供的main函数只是为了测试常量定义。这时<code>if __name__ == &#39;__main__&#39;</code>派上了用场，我们把const.py改一下，添加<code>if __name__ == &quot;__main__&quot;</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PI = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    print(<span class="string">"PI:"</span>, PI)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()<span class="number">1234567</span></span><br></pre></td></tr></table></figure><p>运行const.py，输出如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PI: <span class="number">3.141</span></span><br></pre></td></tr></table></figure><p>运行area.py，输出如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">round area:  <span class="number">12.561</span></span><br></pre></td></tr></table></figure><p>如上，我们可以看到<code>if __name__ == &#39;__main__&#39;</code>相当于Python<a href="https://www.baidu.com/s?wd=%E6%A8%A1%E6%8B%9F&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">模拟</a>的程序入口，Python本身并没有这么规定，这只是一种编码习惯。由于模块之间相互引用，不同模块可能有这样的定义，而程序入口只有一个。到底哪个程序入口被选中，这取决于<code>__name__</code>的值。 </p><h2 id="3-name"><a href="#3-name" class="headerlink" title="3. __name__"></a>3. <code>__name__</code></h2><h3 id="3-1-name-反映一个包的结构"><a href="#3-1-name-反映一个包的结构" class="headerlink" title="3.1 __name__反映一个包的结构"></a>3.1 <code>__name__</code>反映一个包的结构</h3><p><code>__name__</code>是内置变量，可用于反映一个包的结构。假设我们有一个包a，包的结构如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">├── b</span><br><span class="line">│   ├── c.py</span><br><span class="line">│   └── __init__.py</span><br><span class="line">└── __init__.py12345</span><br></pre></td></tr></table></figure><p>在包a中，文件<code>c.py，__init__.py，__init__.py</code>的内容都为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(__name__)<span class="number">1</span></span><br></pre></td></tr></table></figure><p>当一个.py文件（模块）被其他.py文件（模块）导入时，我们在命令行执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">"import a.b.c"</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">a.b</span><br><span class="line">a.b.c123</span><br></pre></td></tr></table></figure><p>由此可见，<code>__name__</code>可以清晰地反映一个模块在包中的层次。</p><h3 id="3-2-name-表示当前模块的名字"><a href="#3-2-name-表示当前模块的名字" class="headerlink" title="3.2 __name__表示当前模块的名字"></a>3.2 <code>__name__</code>表示当前模块的名字</h3><p><code>__name__</code>是内置变量，可用于表示当前模块的名字。我们直接运行一个.py文件（模块）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python a/b/c.py1</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__main__1</span><br></pre></td></tr></table></figure><p>由此我们可知：如果一个.py文件（模块）被直接运行时，则其没有包结构，其<code>__name__</code>值为<code>__main__</code>，即模块名为<code>__main__</code>。</p><p>所以，<code>if __name__ == &#39;__main__&#39;</code>的意思是：当.py文件被直接运行时，<code>if __name__ == &#39;__main__&#39;</code>之下的代码块将被运行；当.py文件以模块形式被导入时，<code>if __name__ == &#39;__main__&#39;</code>之下的代码块不被运行。</p><h2 id="4-main-py文件与python-m"><a href="#4-main-py文件与python-m" class="headerlink" title="4. __main__.py文件与python -m"></a>4. <code>__main__.py</code>文件与<code>python -m</code></h2><p>Python的-m参数用于将一个模块或者包作为一个脚本运行，而<code>__main__.py</code>文件相当于是一个包的“入口程序“。</p><h3 id="4-1-运行Python程序的两种方式"><a href="#4-1-运行Python程序的两种方式" class="headerlink" title="4.1 运行Python程序的两种方式"></a>4.1 运行Python程序的两种方式</h3><ul><li><code>python xxx.py</code>，直接运行xxx.py文件</li><li><code>python -m xxx.py</code>，把xxx.py当做模块运行</li></ul><p>假设我们有一个文件run.py，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(sys.path)<span class="number">123</span></span><br></pre></td></tr></table></figure><p>我们用直接运行的方式启动</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python run.py1</span><br></pre></td></tr></table></figure><p>输出结果(为了说明问题，输出结果只截取了重要部分，下同)：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'/home/huoty/aboutme/pythonstudy/main'</span>, ...]<span class="number">1</span></span><br></pre></td></tr></table></figure><p>然后以模块的方式运行:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m run.py1</span><br></pre></td></tr></table></figure><p>输出内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">''</span>, ...]</span><br><span class="line">/usr/bin/python: No <span class="built_in">module</span> named run.py12</span><br></pre></td></tr></table></figure><p>由于输出结果只列出了关键的部分，应该很容易看出他们之间的差异：</p><ul><li>直接运行方式是把run.py文件所在的目录放到了sys.path属性中</li><li>以模块方式运行是把你输入命令的目录（也就是当前工作路径），放到了 sys.path 属性中。</li></ul><p>以模块方式运行还有一个不同的地方：多出了一行<code>No module named run.py</code>的错误。实际上以模块方式运行时，Python先对run.py执行一遍 import，所以<code>print(sys.path)</code>被成功执行，然后Python才尝试运行run.py模块，但是在path变量中并没有run.py这个模块，所以报错。正确的运行方式，应该是<code>python -m run</code>。</p><h3 id="4-2-main-py的作用"><a href="#4-2-main-py的作用" class="headerlink" title="4.2 __main__.py的作用"></a>4.2 <code>__main__.py</code>的作用</h3><p>仍然先看例子，假设我们有如下一个包package：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">package</span><br><span class="line">├── __init__.py</span><br><span class="line">└── __main__.py123</span><br></pre></td></tr></table></figure><p>其中，文件<code>__init__.py</code>的内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(<span class="string">"__init__"</span>)</span><br><span class="line">print(sys.path)<span class="number">1234</span></span><br></pre></td></tr></table></figure><p>其中，文件<code>__main__.py</code>的内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(<span class="string">"__main__"</span>)</span><br><span class="line">print(sys.path)<span class="number">1234</span></span><br></pre></td></tr></table></figure><p>接下来，我们运行这个package，使用<code>python -m package</code>运行，输出结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__init__</span><br><span class="line">[<span class="string">''</span>, ...]</span><br><span class="line"></span><br><span class="line">__main__</span><br><span class="line">[<span class="string">''</span>, ...]<span class="number">12345</span></span><br></pre></td></tr></table></figure><p>使用<code>python package</code>运行，输出结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__main__</span><br><span class="line">[<span class="string">'package'</span>, ...]<span class="number">12</span></span><br></pre></td></tr></table></figure><p>总结一下</p><ul><li><p>当加上-m参数时，Python会把当前工作目录添加到sys.path中；而不加-m时，Python则会把脚本所在目录添加到sys.path中。</p></li><li><p>当加上-m参数时，Python会先将模块或者包导入，然后再执行。</p></li><li><p><code>__main__.py</code>文件是一个包或者目录的入口程序。不管是用<code>python package</code>还是用<code>python -m package</code>运行，<code>__main__.py</code>文件总是被执行。 </p></li></ul><h2 id="5-原文链接"><a href="#5-原文链接" class="headerlink" title="5. 原文链接"></a>5. 原文链接</h2><p><a href="https://blog.csdn.net/yjk13703623757/article/details/77918633" target="_blank" rel="noopener">如何简单地理解Python中的if <strong>name</strong> == ‘<strong>main</strong>‘</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIS大牛开发个人博客归纳</title>
      <link href="/GIS/GIS%20development%20blog-1552012144.html"/>
      <url>/GIS/GIS%20development%20blog-1552012144.html</url>
      
        <content type="html"><![CDATA[<p>​    Esri中国信息技术有限公司是Esri公司在中国大陆的唯一分支机构，为客户提供基于地理信息技术的系统设计咨询、技术支持、教育培训等服务，还与“中国科学院国家资源与环境信息重点试验室”联合建立了“ArcGIS中国培训中心”，并与国内200多家单位和专业机构建立了合作伙伴业务关系，为用户提供全方位的解决方案。</p><p>​    总是通过Google找各种GIS相关的blog，这次，把国内外所有的GIS相关的高价值的blog全部打包，一个不剩，统统贡献出来。</p><p>​    <strong>注意</strong>：国外的博客需要科学上网才能打开😜。</p><table><thead><tr><th></th><th>Blog</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><a href="https://blogs.esri.com/esri/" target="_blank" rel="noopener">Esri Blog</a></td><td>Esri官方博客，最权威的ArcGIS信息来源。</td></tr><tr><td>2</td><td><a href="http://www.giser.net/" target="_blank" rel="noopener">Baocai  Zhang</a></td><td>Esri北京研发中心大牛的博客。</td></tr><tr><td>3</td><td><a href="http://blog.newnaw.com/" target="_blank" rel="noopener">Zhifang Wang</a></td><td>Esri北京研发中心大牛的博客。</td></tr><tr><td>4</td><td><a href="http://blog.csdn.net/iispring" target="_blank" rel="noopener">Qun Sun</a></td><td>Esri北京研发中心大牛的博客。</td></tr><tr><td>5</td><td><a href="http://blog.csdn.net/sgdgoodboy" target="_blank" rel="noopener">Guodong Song</a></td><td>Esri北京研发中心大牛的博客。</td></tr><tr><td>6</td><td><a href="http://www.veryspatial.com/" target="_blank" rel="noopener">Very Spatial</a></td><td>WVU毕业的学生创建，GIS信息园地。</td></tr><tr><td>7</td><td><a href="http://apb.directionsmag.com/" target="_blank" rel="noopener">All Points Blog</a></td><td>超好的GIS博客，内容全面，从理论到实践，紧跟GIS技术前沿。</td></tr><tr><td>8</td><td><a href="http://www.spatiallyadjusted.com/" target="_blank" rel="noopener">James Fee GIS Blog</a></td><td>James Fee的个人博客，超丰富的内容。</td></tr><tr><td>9</td><td><a href="http://povesham.wordpress.com/" target="_blank" rel="noopener">Po Ve Sham</a></td><td>非常实用的有关地理空间技术和环境学的博客，还有大量关于Open  Street Map的文章。</td></tr><tr><td>10</td><td><a href="http://bostonography.com/" target="_blank" rel="noopener">Bostonography</a></td><td>专注于美国波士顿地理信息的博客，N多数据分析文章和漂亮的可视化特效。</td></tr><tr><td>11</td><td><a href="http://blog.fortiusone.com/" target="_blank" rel="noopener">The Offical Blog of  Fortius One – Now GeoIQ Blog</a></td><td>FortiusOne是一家地理信息技术公司（现已被Esri收购），有很多可视化特效和在线数据分析，以及数据共享方面的产品，不过他们的很多博客都是在讲他们的产品。</td></tr><tr><td>12</td><td><a href="http://mapperz.blogspot.com/" target="_blank" rel="noopener">Mapperz, The Mapping News Blog</a></td><td>N多关于Google  Maps和Mash-ups的文章。</td></tr><tr><td>13</td><td><a href="http://slashgeo.org/" target="_blank" rel="noopener">SlashGeo</a></td><td>超多关于GIS行业的新闻文章。</td></tr><tr><td>14</td><td><a href="http://content.stamen.com/" target="_blank" rel="noopener">Stamen Design</a></td><td>基本都是数据可视化方面的文章。</td></tr><tr><td>15</td><td><a href="http://www.floatingsheep.org/" target="_blank" rel="noopener">FloatingSheep</a></td><td>FloatingSheep是一个合作性质的研究组织，研究员来自于Kentucky大学和牛津大学，工作主要是Google  Maps的数据挖掘方面。</td></tr><tr><td>16</td><td><a href="http://outsidetheneatline.blogspot.com/" target="_blank" rel="noopener">Outside the Neatline</a></td><td>内容主要是关于地理信息系统的理论和实践。</td></tr><tr><td>17</td><td><a href="http://google-latlong.blogspot.com/" target="_blank" rel="noopener">Google Lat  Long Blog</a></td><td>这个主要是由Google Maps的开发人员写的文章。</td></tr><tr><td>18</td><td><a href="http://geographika.co.uk/" target="_blank" rel="noopener">Geographika</a></td><td>关于GIS的纯技术文章，内容涉及OpenLayers、Spatial  SQL和计算机硬件等。</td></tr><tr><td>19</td><td><a href="http://www.geospatialanalyst.com/" target="_blank" rel="noopener">Geospatial  Analysts</a></td><td>如果你有GIS tools的问题，或你正在寻找解决GIS  task的脚本，请到这里来。</td></tr><tr><td>20</td><td><a href="http://gisandscience.com/" target="_blank" rel="noopener">GIS and Science</a></td><td>Esri员工Matt  Artz的博客，有大量曾发表在学术杂志上的文章。</td></tr><tr><td>21</td><td><a href="http://www.edparsons.com/" target="_blank" rel="noopener">EdParsons.com</a></td><td>Google的地理空间技术大牛Ed Parsons的博客，内容非常广泛。</td></tr><tr><td>22</td><td><a href="http://odoe.net/blog/" target="_blank" rel="noopener">Odoe.net</a></td><td>大量GIS编程技术，含JavaScript、C#和Python。</td></tr><tr><td>23</td><td><a href="http://spatiallaw.blogspot.com/" target="_blank" rel="noopener">Spatial Law and  Policy</a></td><td>不是那种常规性科普博客，内容都是关于常见的GIS极专业的问题。</td></tr><tr><td>24</td><td><a href="http://mapbutcher.com/blog/" target="_blank" rel="noopener">MapButcher</a></td><td>这个博客好久没更新了，但MapButcher这名字起的倒是很大气，地图屠夫。</td></tr><tr><td>25</td><td><a href="http://opinionator.blogs.nytimes.com/category/borderlines/" target="_blank" rel="noopener">Borderlines</a></td><td>都是发布在纽约时报上的文章，作者Frank Jacobs，都是有关地理学方面的。</td></tr><tr><td>26</td><td><a href="http://nodedangles.wordpress.com/" target="_blank" rel="noopener">Node Dangles</a></td><td>超好的GIS技术文章，内含大量示例代码。</td></tr><tr><td>27</td><td><a href="http://mapbrief.com/" target="_blank" rel="noopener">MapBrief</a></td><td>地理空间分析文章。</td></tr><tr><td>28</td><td><a href="http://gisstudio.wordpress.com/" target="_blank" rel="noopener">GIS Studio</a></td><td>又一个带有示例代码的GIS博客。</td></tr><tr><td>29</td><td><a href="http://blog.geomusings.com/" target="_blank" rel="noopener">GeoMusings</a></td><td>内容涉及开源技术、应用评论和GIS常见问题。</td></tr><tr><td>30</td><td><a href="http://danieljlewis.org/" target="_blank" rel="noopener">Volunteered  Geographic Information</a></td><td>内容都是关于GIS的技术研究文章和空间分析讨论。</td></tr><tr><td>31</td><td><a href="http://pragmaticgeographer.blogspot.com/" target="_blank" rel="noopener">The  Pragmatic Geographer</a></td><td>有关GIS 的应用评论和技术文摘。</td></tr><tr><td>32</td><td><a href="http://www.gretchenpeterson.com/blog/" target="_blank" rel="noopener">A Cartographer’s Toolkit</a></td><td>Gretchen Peterson的个人博客，主要是制图学方面。</td></tr><tr><td>33</td><td><a href="http://blog.perrygeo.net/" target="_blank" rel="noopener">Perrygeo</a></td><td>超好的地理空间方面的博客，内容涉及程序开发和开源软件。</td></tr><tr><td>34</td><td><a href="http://anothergisblog.blogspot.com/" target="_blank" rel="noopener">Another GIS Blog</a></td><td>关于GIS方面的技术博客，涉及Python语言、ArcGIS和各种编程技巧。</td></tr><tr><td>35</td><td><a href="http://arcpy.wordpress.com/" target="_blank" rel="noopener">Cafe Python</a></td><td>N多代码示例，如果你是一个Esri用户并且擅长Python，那这里是天堂。</td></tr><tr><td>36</td><td><a href="http://fuzzytolerance.info/" target="_blank" rel="noopener">Fuzzy Tolerance</a></td><td>这个GIS博客不光名字好听，内容也不错哦。</td></tr><tr><td>37</td><td><a href="http://planet.postgis.net/" target="_blank" rel="noopener">Planet PostGIS</a></td><td>如果你正在寻找有关PostGIS的故事，到这里吧。</td></tr><tr><td>38</td><td><a href="http://www.vicchi.org/" target="_blank" rel="noopener">Gary’s  Bloggage</a></td><td>各种地理相关性文章，包括Mapping和Web  GIS。</td></tr><tr><td>39</td><td><a href="http://underdark.wordpress.com/" target="_blank" rel="noopener">Free and Open  Source GIS Ramblings</a></td><td>作者Anita Graser，来自QGIS团队，同时也是OSGeo成员。</td></tr><tr><td>40</td><td><a href="http://gisdude.wordpress.com/" target="_blank" rel="noopener">GIS Dude’s Weblog</a></td><td>gisdude的博客，全都是地理相关文章。</td></tr><tr><td>41</td><td><a href="http://mappatondo.blogspot.com/" target="_blank" rel="noopener">Mappatondo</a></td><td>包含丰富的GIS相关代码示例（空间分析和mash-ups）</td></tr><tr><td>42</td><td><a href="http://www.spatialdbadvisor.com/sql_server_blog" target="_blank" rel="noopener">Spatial DBA Advisor</a></td><td>主要是空间数据库方面的文章，涉及Oracle和PostGIS。</td></tr><tr><td>43</td><td><a href="http://kelsocartography.com/blog/" target="_blank" rel="noopener">Kelso’s Corner</a></td><td>Nathaniel Vaughn Kelso的博客，GIS大牛。</td></tr><tr><td>44</td><td><a href="http://www.digital-geography.com/" target="_blank" rel="noopener">Digitial Geography</a></td><td>在这里你会找到很多教程性的文章，内容包括GIS和统计学等，大部分都是由欧洲各院校的地理专业学生发布的。</td></tr><tr><td>45</td><td><a href="http://blog.gisuser.com/" target="_blank" rel="noopener">AnyGeo Blog</a></td><td>Glenn Letham的博客，这位大牛熟悉GIS领域各种应用，他的twitter是<a href="https://twitter.com/gletham" target="_blank" rel="noopener">https://twitter.com/gletham</a>。</td></tr><tr><td>46</td><td><a href="http://blog.allanglen.com/" target="_blank" rel="noopener">blog.allanglen.com</a></td><td>内容包括地理空间信息技术和软件开发。</td></tr><tr><td>47</td><td><a href="http://gisthought.blogspot.com/" target="_blank" rel="noopener">GIS Thought</a></td><td>既是博客又是论坛。</td></tr><tr><td>48</td><td><a href="http://blog.davebouwman.com/" target="_blank" rel="noopener">blog.davebouwman.com</a></td><td>作者Dave  Bouwman，JavaScript开发人员，来自Esri  DC团队，博客含大量代码示例和超有深度的技术文章。</td></tr><tr><td>49</td><td><a href="http://thunderheadxpler.blogspot.com/" target="_blank" rel="noopener">Thunderhead  Explorer</a></td><td>如果你从来没听过Mansour Raad的讲演，那就来这吧。好文超多，内部覆盖大数据和软件开发。</td></tr><tr><td>50</td><td><a href="http://smathermather.wordpress.com/" target="_blank" rel="noopener">Smathermather’s Weblog</a></td><td>遥感、GIS、生态学和时髦技术。</td></tr><tr><td>51</td><td><a href="http://wherewithal1.wordpress.com/" target="_blank" rel="noopener">Wherewithal</a></td><td>这个作者说，他每天脑袋里想的，不是地图就是啤酒。</td></tr><tr><td>52</td><td><a href="http://www.bostongis.com/blog/" target="_blank" rel="noopener">BostonGIS Blog</a></td><td>基本都是PostGIS的新闻，也包括一些其他开源技术和geo-meetups。</td></tr><tr><td>53</td><td><a href="http://constantgeography.com/" target="_blank" rel="noopener">Constant Geography</a></td><td>Michael Busby，GIS领域的专家。</td></tr><tr><td>54</td><td><a href="http://sdeintercept.wordpress.com/" target="_blank" rel="noopener">SDE Intercept</a></td><td>关于SDE的博客，想了解这方面的知识就来这吧。</td></tr><tr><td>55</td><td><a href="http://geosprocket.blogspot.com/" target="_blank" rel="noopener">GeoSprocket</a></td><td>作者Bill Morris，如果你想知道这个世界上发生了什么有关GIS的事，来这吧，要啥有啥。</td></tr><tr><td>56</td><td><a href="http://cholmes.wordpress.com/" target="_blank" rel="noopener">Into the Pudding</a></td><td>关于地理空间技术的博客。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIS </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为何建站</title>
      <link href="/thought/why%20this%20blog%20site-1551756187.html"/>
      <url>/thought/why%20this%20blog%20site-1551756187.html</url>
      
        <content type="html"><![CDATA[<h3 id="为何建站"><a href="#为何建站" class="headerlink" title="为何建站"></a>为何建站</h3><p>因为本人是地理信息科学专业的大三学生（2019年），作为交叉学科，我们在本科阶段要学的主要分为计算机编程知识、测绘遥感方面的专业知识、<del>考研统考学科</del> 基础学科知识。</p><p>搭建这个网站现阶段主要是为了记录在学习的过程中的技术收获，养成知识的归纳的习惯，另外就是写一些时事的<del>看法</del> 吐槽。😂</p><p>而最主要的目的，就是能够通过本站展示自己，如果能以此能找到三俩好友，幸甚至哉。😀</p><h3 id="为何记录"><a href="#为何记录" class="headerlink" title="为何记录"></a>为何记录</h3><blockquote><p>人类区别于其他物种最重要的原因是，人类懂得记录，记录会推动人类反思，反思进而推动人类进步，而其他物种的生生不息大多只体现在繁衍上。</p></blockquote><p>带着自己的思考记录，在自己回首再读的时候，或许能够发现当时的思维的局限，能够明白自己是否在进步。过年期间没事时，又看了一遍黎明之前跟大秦帝国，觉得自己能够对人物之间的解读突然上了一个层次，而这是突然发现的，所以想通过平时记录一些时事，一做学习之余的消遣，二为以后反思提供资料。</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>简言之，<strong><a href="https://screw1024.github.io/">本站</a></strong>是一个记录技术和思考的原创个人博客。</p><p>现阶段主要是计算机方面的一些总结，可以获得成就奖嘛😜。以后打算走GIS开发路线，如果能够顺利，希望以后能够有机会写一些GIS方面的总结，因为本人能力有限，在学校阶段主要精力放在了计算机上了。</p><p>文章中如若发现错误或不当言论，还望您不吝赐教。</p><h3 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h3><p>在校生，刚把前端基础学的差不多（顺带说下，通过搭建本站终于懂了node的模块化的好处了）。目前正在学Python，想学习一下Django以及爬虫，这些都是以后web gis的技术要求。</p><blockquote><p>技术交流、开车交友请右转找微信小图标🙃</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> thought </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喜欢听歌的人，内心可能有个戏精</title>
      <link href="/thought/about%20my%20hobby-1551756187.html"/>
      <url>/thought/about%20my%20hobby-1551756187.html</url>
      
        <content type="html"><![CDATA[<h4 id="我的爱好"><a href="#我的爱好" class="headerlink" title="我的爱好"></a>我的爱好</h4><p>作为一名音痴，不知为何对听音乐情有独钟。</p><p>哈哈，骗你的😜，我的想法是：</p><blockquote><p>大概是歌曲里面的某句话突然叩击到我们内心的柔软，让我们在那一瞬间找到了共鸣，找到了一个倾诉的出口，很多时候我们会发现，把那些事情说出来以后，反倒释怀了，很多压在心里一直过不去的坎，在倾诉的那一刻，也得到了真正的释放和解脱。</p></blockquote><p>如果你也喜欢听音乐，那太好了🙃。</p><h4 id="喜欢的类型"><a href="#喜欢的类型" class="headerlink" title="喜欢的类型"></a>喜欢的类型</h4><blockquote><p><strong>民谣的调调很勾人，民谣的技巧是讲故事和打动听故事的人，民谣不普通，因为我们的生活可以很撩人。</strong></p><blockquote><p><a href="https://www.jianshu.com/u/25a1f45331ba" target="_blank" rel="noopener">Summer_夏叶子</a></p></blockquote></blockquote><p>最开始喜欢听的歌，现在想想有点吵吵😂，尤其喜欢bigbang，汪峰，当时觉得能给我带来的是力量吧，只要嗓门大，节奏强就是好歌，而现在喜欢的民谣宋东野的==安和桥==，这是心目中唯一一首TOP0级别的歌曲。</p><p>对把自己的经历写进歌的曲子，我都毫无抵抗力，而民谣是最佳媒介，个人觉得。</p><p>下面几首TOP1级别的：</p><blockquote><p>朴树 的 那些花儿，平凡之路</p><p>Ed Sheeran 的 Photograph</p><p>John Legend 的 All of Me</p></blockquote><h4 id="喜爱的歌手"><a href="#喜爱的歌手" class="headerlink" title="喜爱的歌手"></a>喜爱的歌手</h4><p>目前为止，只对两人佩服至极，其中一位便是歌手 <a href="https://www.baidu.com/baidu?isource=infinity&amp;iname=baidu&amp;itype=web&amp;tn=22073068_hao_pg&amp;ie=utf-8&amp;wd=%E6%9C%B4%E6%A0%91" target="_blank" rel="noopener">朴树</a>。</p><blockquote><p>歌词特别诗化，嗓音又特别脆弱。他的歌“就像朗诵诗一样，脆弱就会特别打动人”</p><blockquote><p>高晓松</p></blockquote></blockquote><p>《生如夏花》名字出自于泰戈尔的《飞鸟集》：“生如夏花之绚烂，死如秋叶之静美”。在绚烂至极之时，他选择了逃离，一夜之间，他消失了</p><blockquote><p>原来以为他只是短暂的逃离，不曾想一走就是十年。</p></blockquote><p>2014年朴树回来了，十年，多少风云变幻，多少沧海桑田，但他回来之时，还是有那么多人从拥挤的人潮中抽离出来，躲在某个角落里，眼角含着泪跟着朴树一起朗诵：</p><blockquote><p>我曾经跨过山和大海，也穿过人山人海</p><p>我曾经拥有这一切，转眼都飘散如烟</p><p>我曾经失落失望失掉所有的方向</p><p>直到看见平凡  才是唯一的答案</p><blockquote><p>《<a href="https://music.163.com/#/song?id=28815250" target="_blank" rel="noopener">平凡之路</a>》</p></blockquote></blockquote><p>任何情况下，朴树永远跟他的乐队同台演出，有电视台的跨年演唱会提出重金只请朴树一人（少出乐队费用），被他拒绝了，他答应过乐队“不会瞒着大家去接商演”。</p><p>他们跑去北京什刹海公园，在零下七八度的天气下唱着：</p><blockquote><p>你是否得到了，期待的人生</p><p>梦里的海潮声，他们又如何</p><p>从指缝中划过，像在狂野里的风</p><blockquote><p>《<a href="https://music.163.com/#/song?id=518896134" target="_blank" rel="noopener">猎户星座</a>》</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> thought </tag>
            
            <tag> hobby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读曾国藩家书</title>
      <link href="/reading/%E3%80%8AZeng%20Guofan&#39;s%20Family%20Book%E3%80%8B-1549337582.html"/>
      <url>/reading/%E3%80%8AZeng%20Guofan&#39;s%20Family%20Book%E3%80%8B-1549337582.html</url>
      
        <content type="html"><![CDATA[<h4 id="曾文正公"><a href="#曾文正公" class="headerlink" title="曾文正公"></a><a href="https://baike.baidu.com/item/%E6%9B%BE%E5%9B%BD%E8%97%A9/386?fromtitle=%E6%9B%BE%E6%96%87%E6%AD%A3%E5%85%AC&amp;fromid=16169603&amp;fr=aladdin" target="_blank" rel="noopener">曾文正公</a></h4><blockquote><p>谋国之忠，知人之明，自愧不如元辅；同心若金，攻错若石，相期无负平生。</p><blockquote><p>[左宗棠]</p></blockquote></blockquote><blockquote><p>师事近三十年，薪尽火传，筑室忝为门生长；威名震九万里，内安外攘，旷世难逢天下才。</p><blockquote><p>[李鸿章]</p></blockquote></blockquote><p>​        李鸿章对曾文正公的评价勉强算得上是彩虹屁了，毕竟给他打过工嘛😜。但是，何兆武教授的《上学记》里曾写过“中国历史上真正能够做到立德，立功，立言的只有二人：王阳明，曾国藩”，我想是比较公正的吧。</p><p>​        王阳明作为大哲学家，提出的“格物致知”，在中学语文中为难我半天，现在还有阴影😂，只能勉强从《曾国藩家书》入手啦。</p><h4 id="拉家常"><a href="#拉家常" class="headerlink" title="拉家常"></a>拉家常</h4><p>​        一封封看似聊着居家艰难的家书，字里行间蕴含的是对祖父母、父母、兄弟、妻儿、亲朋好友的浓浓的挂念、敬重、关怀、关心之情，每一封家书都洋溢着浓郁亲情。每次读到此书的写给父母的部分，羞愧之至，想到上了大一之后，解放了天性🙃，觉得父母的叮嘱就是唠叨，是一种约束，每个月打一次电话，到了大二才意识到不对，而且每次打电话更像是一种义务，只要完成了就好了，不是发自内心的尊重，现在想来，实在不应该。曾文正公即使身居高位，公务繁忙，还能如此，实在汗颜，今后要多跟家里汇报自己的状况。乌鸦的反哺之恩在于物质上，而在现代社会，人更注重的是精神的感受，所以我要做到好好生活，并让父母直到自己的成长，勉强能回馈父母。希望，以此文提醒自己。</p><p>​        记得有一封家书，写给亲戚资助，不要因为关系好而多给，关系不好而少给。一两句家长里短，道出“不患寡而患不均”的真谛了，凡此种种，须细细品读。</p><h4 id="恒"><a href="#恒" class="headerlink" title="恒"></a>恒</h4><p>​    在家书中，曾国藩教育自己的弟弟说：”凡人做一事，便须全副精神往此一事，首尾不懈。不可见异思迁，做这样想那样，坐这山望那山。“</p><p>​        曾文正公如此令人钦佩，其对于“恒”的执行，旷世独存 。古代儒家学者是何其多，能够写如此多的家书，上下五千年能有几人？读其家书，似乎挨着一个慈眉善目的老先生，捋捋花白的胡须，在你耳边娓娓而谈，那稀稀疏疏的胡须偶尔随风拂过你眼，说来的却是些家长里短，写给弟弟，儿女的都是通过一件件小事，来教其做人，照顾所有人的情绪。即便是对儿子的信中，也会说出自己那些地方做的不对，知道自己恒心不足，就严格控制自己，知道自己文章、诗词不好，就勤加练习。</p><p>​         坚持写家书只是曾文正公对于“恒”执行的一个方面，我想通过某一件事，基本就能大致知道其价值观，曾文正公的“恒”，是我最有感触的，也是首先要学习的。😁</p><h4 id="谦"><a href="#谦" class="headerlink" title="谦"></a>谦</h4><p>​        曾文正公给儿子的信中写道“自念贫窭无知，官至一品，寿逾五十，薄有浮名，兼秉兵权，忝窃万分，夫复何憾！”，作为清朝文臣之首，仍有一颗谦虚之心。当代大多数父母，给儿女们的教导都是命令式的，恰逢青春期孩子逆反心理，肯定容易发生矛盾，同时给孩子的命令，自己又不能做到，实在不能令孩子信服。我觉得，当父母要是能如曾文正公，谦虚，能承认自己的不足，对孩子的“期待”，自己能以身作则，方是良策。</p><p>​        不知道在哪看到的一句话“我们最大的错误，  是把最差的脾气和最糟糕的一面留给了最亲的人。  却把耐心和宽容给了陌生人。”，我觉得很有道理。对待孩子尚谦逊有礼，曾文正公对待别人也就不言而明了。</p><blockquote><p>国藩素拘谨，其才不如胡左，而功倍之，独知人善用，是其特长</p><p>[陈公笃]</p></blockquote><p>​         谦虚，是知人善任的前提，如何能够发现别人的才能，承认别人的才能，在自己有能力是而任用之，谦虚是其第一步。😄</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node创建服务器</title>
      <link href="/frontend/Create%20server%20with%20Node-1541686736.html"/>
      <url>/frontend/Create%20server%20with%20Node-1541686736.html</url>
      
        <content type="html"><![CDATA[<h5 id="要点"><a href="#要点" class="headerlink" title="要点:"></a>要点:</h5><p>​    1.通过引入核心模块，来进行文件的读取和服务器的创建，并调用相应模块的API，进行想要的操作。</p><p>​    2.不同的文件类型进行不同的解析，主要通过Content-Type（多用途互联网邮件拓展）进行不同的定义，如html对应text/html，注意编码方式的声明，服务器默认是utf-8，但是浏览器编码方式是跟当前操作系统是一致的，win10中文操作系统是gbk编码方式，所以会造成乱码。</p><p>​    3.通过node启动服务器后，修改了被读取的文件，不需要重启服务器，因为他是动态读取文件的，通过之前建立的联系。</p><p>相关代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">// 引入两个核心库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">'request'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> url = req.url;</span><br><span class="line">    <span class="comment">// 获取输入的请求字符串url</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(url === <span class="string">'/'</span>)&#123;</span><br><span class="line">    <span class="comment">//‘/’后是请求的路径</span></span><br><span class="line"></span><br><span class="line">    fs.readFile(<span class="string">'./reource/halloword.html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>,<span class="string">'text/plain; charset=utf-8'</span>);</span><br><span class="line">    res.end(<span class="string">'老哥，没读出来，是不是路径或者文件名写错了啊'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//data存取的是读取到的内容，是二进制的数据，通过toString转为字符串</span></span><br><span class="line">    <span class="comment">//res.end()支持两种格式，二进制格式和字符串类型</span></span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>,<span class="string">'text/html; charset=utf-8'</span>);</span><br><span class="line">    <span class="comment">// 注意和上面个text/plain的区别，通过text/html声明html类型文件</span></span><br><span class="line">    res.end(data);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(url === <span class="string">'/pushu'</span>)&#123;</span><br><span class="line">    fs.readFile(<span class="string">'./reource/pushu.jpeg'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>,<span class="string">'text/plain; charset=utf-8'</span>);</span><br><span class="line">    res.end(<span class="string">'老哥，没读出来，是不是路径或者文件名写错了啊'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//data存取的是读取到的内容，是二进制的数据，通过toString转为字符串</span></span><br><span class="line">    <span class="comment">//res.end()支持两种格式，二进制格式和字符串类型</span></span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>,<span class="string">'image/jpeg'</span>);</span><br><span class="line">    <span class="comment">// 图片反而不能声明utf-8编码格式他有特定的编码格式</span></span><br><span class="line">    res.end(data);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'老哥，安排好了'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>启动服务器：</p><p><img src="/img/2019/nodeServer/1.png" alt></p><p>效果：</p><p><img src="/img/2019/nodeServer/2.gif" alt></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二完成的学生管理系统</title>
      <link href="/backend/Student%20management%20system-1525442470.html"/>
      <url>/backend/Student%20management%20system-1525442470.html</url>
      
        <content type="html"><![CDATA[<h5 id="一、创建关系"><a href="#一、创建关系" class="headerlink" title="一、创建关系"></a>一、创建关系</h5><blockquote><p>​    首先创建三个表student、teacherInfo、stndentInfo 分别用于存放学生基本信息、老师账户和密码、学生的学号和密码。</p></blockquote><p><img src="/img/2018/studentDB/2.png" alt></p><h5 id="二、权限设置"><a href="#二、权限设置" class="headerlink" title="二、权限设置"></a>二、权限设置</h5><blockquote><p>​    分别建立老师和学生的登陆入口，通过入口信息判断后查询不同的表（关系），从而完成不同的操作人员的数据库的权限要求，老师可以看到全部信息，每个学生只能看到自己的信息。</p></blockquote><p><img src="/img/2018/studentDB/3.png" alt></p><p>​      为了区别不同的登陆人员，先定义两个RadioButton，由于学生人数比老师人数多的多，在学生的RadioButton的控件属性check中，选择为默认。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">private <span class="keyword">void</span> btnOk_Click(object sender, EventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (rbtnStudent.Checked)</span><br><span class="line">           &#123;   </span><br><span class="line">               <span class="comment">//选择的是学生对象</span></span><br><span class="line">               using (SqlConnection conn = <span class="keyword">new</span> SqlConnection(<span class="string">"Data Source=DESKTOP-BEUJ3C4;Initial Catalog=School2;User ID=sa;Password =2323010676;"</span>))</span><br><span class="line">               &#123;</span><br><span class="line">                   conn.Open();</span><br><span class="line">                   <span class="comment">//打开数据库的连接</span></span><br><span class="line"></span><br><span class="line">                   <span class="built_in">String</span> sql = <span class="string">"select * from stndentInfo where sno = @sno and spw = @spw"</span>;</span><br><span class="line">                   <span class="comment">//创建数据库的操作字符串</span></span><br><span class="line"></span><br><span class="line">                   SqlCommand cmd = <span class="keyword">new</span> SqlCommand(sql, conn); </span><br><span class="line">                   <span class="comment">//对指定的对象，操作字符串内容</span></span><br><span class="line"></span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@sno"</span>, txtNo.Text));</span><br><span class="line">                   <span class="comment">//用参数代替占位符，线性更安全</span></span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@spw"</span>, txtPw.Text));</span><br><span class="line"></span><br><span class="line">                   SqlDataReader reader = cmd.ExecuteReader();<span class="comment">//操作</span></span><br><span class="line"></span><br><span class="line">                   <span class="keyword">if</span> (reader.Read())</span><br><span class="line">                   &#123;</span><br><span class="line">                       <span class="comment">//如果查询到内容，跳转到Information界面，同时关闭当前界面</span></span><br><span class="line">                       Information info = <span class="keyword">new</span> Information(); </span><br><span class="line">                       info.Show();</span><br><span class="line">                       <span class="keyword">this</span>.Hide();</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span></span><br><span class="line">                   &#123;</span><br><span class="line">                       MessageBox.Show(<span class="string">"请输入正确信息！"</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="comment">//这里只有两个选项，就没写条件，其余同上，注意对应的数据关系，表是不同的</span></span><br><span class="line">               using (SqlConnection conn = <span class="keyword">new</span> SqlConnection(<span class="string">"Data Source=DESKTOP-BEUJ3C4;Initial Catalog=School2;User ID=sa;Password =2323010676;"</span>))</span><br><span class="line">               &#123;</span><br><span class="line">                   conn.Open();</span><br><span class="line"></span><br><span class="line">                   <span class="built_in">String</span> sql = <span class="string">"select * from teacherInfo where userT = @userT and pwT = @pwT"</span>;</span><br><span class="line"></span><br><span class="line">                   SqlCommand cmd = <span class="keyword">new</span> SqlCommand(sql, conn);</span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@userT"</span>, txtNo.Text));</span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@pwT"</span>, txtPw.Text));</span><br><span class="line"></span><br><span class="line">                   SqlDataReader reader = cmd.ExecuteReader();</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">if</span> (reader.Read())</span><br><span class="line">                   &#123;</span><br><span class="line">                       teacherUse teac = <span class="keyword">new</span> teacherUse();</span><br><span class="line">                       teac.Show();</span><br><span class="line">                       <span class="keyword">this</span>.Hide();</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span></span><br><span class="line">                   &#123;</span><br><span class="line">                       MessageBox.Show(<span class="string">"请输入正确信息！"</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//如果取消操作，关闭程序</span></span><br><span class="line">       private <span class="keyword">void</span> btnCancel_Click(object sender, EventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">this</span>.Close();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h5 id="三、学生功能"><a href="#三、学生功能" class="headerlink" title="三、学生功能"></a>三、学生功能</h5><blockquote><p>​    完成修改密码，添加新的学生信息（为了方便），这里需要引起重视的是，这里的date类型需要进行转换，注意和老师界面查询是的date类型做出区分。</p></blockquote><p><img src="/img/2018/studentDB/4.png" alt></p><ul><li><p>查询模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">private <span class="keyword">void</span> btnOk_Click(object sender, EventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           using (SqlConnection conn = <span class="keyword">new</span> SqlConnection(<span class="string">"Data Source=DESKTOP-BEUJ3C4;Initial Catalog=School2;User ID=sa;Password =2323010676;"</span>))</span><br><span class="line">           &#123;</span><br><span class="line">               conn.Open();</span><br><span class="line"></span><br><span class="line">               </span><br><span class="line">               <span class="keyword">if</span> (txtNewpw.Text == txtCheckpw.Text)</span><br><span class="line">               &#123;</span><br><span class="line">                   string sql = <span class="built_in">String</span>.Format(<span class="string">"update stndentInfo set spw = @spw where sno = @sno"</span>);</span><br><span class="line"></span><br><span class="line">                   </span><br><span class="line">                   SqlCommand cmd = <span class="keyword">new</span> SqlCommand(sql, conn);</span><br><span class="line"></span><br><span class="line">                  </span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@sno"</span>, txtUser.Text));</span><br><span class="line">                   <span class="comment">//这里注意也要写成txt.User.Text转换的是文本框里面的内容</span></span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@spw"</span>, txtCheckpw.Text));</span><br><span class="line"></span><br><span class="line">                   int rows = cmd.ExecuteNonQuery();</span><br><span class="line">                   <span class="comment">//这句话时执行的语句的必要的控制性的一句话</span></span><br><span class="line"></span><br><span class="line">                   MessageBox.Show(<span class="string">"新密码已经修改完成"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">               &#123;</span><br><span class="line">                   MessageBox.Show(<span class="string">"请输入两次相同的密码"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">              </span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p>修改密码模块</p><p><img src="/img/2018/studentDB/5.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">private <span class="keyword">void</span> btnOk_Click(object sender, EventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           using (SqlConnection conn = <span class="keyword">new</span> SqlConnection(<span class="string">"Data Source=DESKTOP-BEUJ3C4;Initial Catalog=School2;User ID=sa;Password =2323010676;"</span>))</span><br><span class="line">           &#123;</span><br><span class="line">               conn.Open();</span><br><span class="line"></span><br><span class="line">               </span><br><span class="line">               <span class="keyword">if</span> (txtNewpw.Text == txtCheckpw.Text)</span><br><span class="line">               &#123;</span><br><span class="line">                   string sql = <span class="built_in">String</span>.Format(<span class="string">"update stndentInfo set spw = @spw where sno = @sno"</span>);</span><br><span class="line"></span><br><span class="line">                   </span><br><span class="line">                   SqlCommand cmd = <span class="keyword">new</span> SqlCommand(sql, conn);</span><br><span class="line"></span><br><span class="line">                  </span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@sno"</span>, txtUser.Text));</span><br><span class="line">                   <span class="comment">//这里注意也要写成txt.User.Text转换的是文本框里面的内容</span></span><br><span class="line">                   cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@spw"</span>, txtCheckpw.Text));</span><br><span class="line"></span><br><span class="line">                   int rows = cmd.ExecuteNonQuery();</span><br><span class="line">                   <span class="comment">//这句话时执行的语句的必要的控制性的一句话</span></span><br><span class="line"></span><br><span class="line">                   MessageBox.Show(<span class="string">"新密码已经修改完成"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">               &#123;</span><br><span class="line">                   MessageBox.Show(<span class="string">"请输入两次相同的密码"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">              </span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="四、老师功能"><a href="#四、老师功能" class="headerlink" title="四、老师功能"></a>四、老师功能</h5><blockquote><p>​    查询学生的详细信息，注意date格式的转换，以及完成查询后的标签内容的转换。</p></blockquote><ul><li><p>对学生单个查询</p><p><img src="/img/2018/studentDB/6.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">private <span class="keyword">void</span> btnOk_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(txtSno.Text == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">"请输入学号"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                using (SqlConnection conn = <span class="keyword">new</span> SqlConnection(<span class="string">"Data Source=DESKTOP-BEUJ3C4;Initial Catalog=School2;User ID=sa;Password =2323010676;"</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    conn.Open();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                    <span class="built_in">String</span> sql = <span class="string">"select * from student where sno = @sno"</span>;</span><br><span class="line"> </span><br><span class="line">                    SqlCommand cmd = <span class="keyword">new</span> SqlCommand(sql,conn);</span><br><span class="line"> </span><br><span class="line">                    cmd.Parameters.Add(<span class="keyword">new</span> SqlParameter(<span class="string">"@sno"</span>, txtSno.Text));</span><br><span class="line"> </span><br><span class="line">                    SqlDataReader reader = cmd.ExecuteReader();</span><br><span class="line"> </span><br><span class="line">                    <span class="keyword">if</span> (reader.Read())</span><br><span class="line">                    &#123;</span><br><span class="line">                        txtMajor.Text = reader.GetString(reader.GetOrdinal(<span class="string">"smajor"</span>));</span><br><span class="line">                        txtSex.Text = reader.GetString(reader.GetOrdinal(<span class="string">"sSex"</span>));</span><br><span class="line">                        txtName.Text = reader.GetString(reader.GetOrdinal(<span class="string">"sname"</span>));</span><br><span class="line"> </span><br><span class="line">                        DateTime dt = reader.GetDateTime(reader.GetOrdinal(<span class="string">"sbirthday"</span>));</span><br><span class="line">                        <span class="comment">//用Datetime格式接收时间对象</span></span><br><span class="line">                        txtBirthday.Text = dt.ToShortDateString();</span><br><span class="line">                        <span class="comment">//将需要显示的内容转化成能在lable控件中显示的字符串                        </span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//清除上一次查询标签中的内容，不然下次查询不显示查询出来的内容</span></span><br><span class="line">                        txtSno.Text = <span class="literal">null</span>;</span><br><span class="line">                        txtSex.Text = <span class="literal">null</span>;</span><br><span class="line">                        txtName.Text = <span class="literal">null</span>;</span><br><span class="line">                        txtMajor.Text = <span class="literal">null</span>;</span><br><span class="line">                        txtBirthday.Text = <span class="literal">null</span>;</span><br><span class="line">                        MessageBox.Show(<span class="string">"抱歉，没有查到对应学号的学生信息"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>对学生进行分组查询</p><blockquote><p>​    分组对学生进行查询，将结果添加进DataGirdView控件中，注意前面也提到了Anchor控制位置。</p></blockquote><p><img src="/img/2018/studentDB/7.png" alt></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">public partial class 学生信息查询 : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public 学生信息查询()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        private <span class="keyword">void</span> 学生信息查询_Load(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//加载界面时，即添加下拉框里面的内容</span></span><br><span class="line">            cbxinfo.Items.Add(<span class="string">"地信专业"</span>);</span><br><span class="line">            cbxinfo.Items.Add(<span class="string">"测绘专业"</span>);</span><br><span class="line">            cbxinfo.Items.Add(<span class="string">"物理专业"</span>);</span><br><span class="line">            cbxinfo.Items.Add(<span class="string">"外语专业"</span>);</span><br><span class="line">            cbxinfo.Items.Add(<span class="string">"中文专业"</span>);</span><br><span class="line">            cbxinfo.Items.Add(<span class="string">"计算机专业"</span>);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        private <span class="keyword">void</span> btnOk_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            using (SqlConnection conn = <span class="keyword">new</span> SqlConnection(<span class="string">"Data Source=DESKTOP-BEUJ3C4;Initial Catalog=School;User ID=sa;Password =2323010676;"</span>))</span><br><span class="line">                <span class="comment">//这里使用的数据库是，前面查询信息作业添加的school数据库，用于存放学生的基本信息，及考试信息</span></span><br><span class="line">            &#123;</span><br><span class="line">                conn.Open();</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//String sql = "select * from student where 所属专业 =@所属专业";</span></span><br><span class="line"> </span><br><span class="line">                <span class="built_in">String</span> sql = <span class="built_in">String</span>.Format( <span class="string">"select * from student where 所属专业 ='&#123;0&#125;'"</span>,cbxinfo.Text);</span><br><span class="line"> </span><br><span class="line">                SqlCommand cmd = <span class="keyword">new</span> SqlCommand();</span><br><span class="line">                <span class="comment">//创建数据库命令对象</span></span><br><span class="line">                <span class="comment">// cmd.Parameters.Add(new SqlParameter("@所属专业",cbxinfo.Text));</span></span><br><span class="line">                <span class="comment">//将下拉框里面的文本代替参数信息  用参数不行，不知为什么，改用占位符</span></span><br><span class="line"> </span><br><span class="line">                SqlDataAdapter sda = <span class="keyword">new</span> SqlDataAdapter(sql, conn);</span><br><span class="line">                <span class="comment">//逐行查询，区别于SqlDataReader聚合查询</span></span><br><span class="line">                DataSet ds = <span class="keyword">new</span> DataSet(); </span><br><span class="line">                <span class="comment">//创建容器，存放查询出来的对象</span></span><br><span class="line">                sda.Fill(ds);<span class="comment">//将对象填充容器</span></span><br><span class="line"> </span><br><span class="line">                dgvShow.DataSource = ds.Tables[<span class="number">0</span>];</span><br><span class="line">                <span class="comment">//绑定数据，将查询出来的第一个表数据显示在dgvShow中</span></span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>结果：</li></ul><p><img src="/img/2018/studentDB/8.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database </tag>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>标签云</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>为何建站 &amp;&amp; 为何写作</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h4 id="为何建站"><a href="#为何建站" class="headerlink" title="为何建站"></a>为何建站</h4><p>因为本人是地理信息科学专业的大三学生（2019年），作为交叉学科，我们在本科阶段要学的主要分为计算机编程知识、测绘遥感方面的专业知识、<del>考研统考学科</del> 基础学科知识。</p><p>搭建这个网站现阶段主要是为了记录在学习的过程中的技术收获，养成知识的归纳的习惯，另外就是写一些时事的<del>看法</del> 吐槽。😂</p><p>而最主要的目的，就是能够通过本站展示自己，如果能以此能找到三俩好友，幸甚至哉。😀</p><h4 id="为何记录"><a href="#为何记录" class="headerlink" title="为何记录"></a>为何记录</h4><blockquote><p>人类区别于其他物种最重要的原因是，人类懂得记录，记录会推动人类反思，反思进而推动人类进步，而其他物种的生生不息大多只体现在繁衍上。</p></blockquote><p>带着自己的思考记录，在自己回首再读的时候，或许能够发现当时的思维的局限，能够明白自己是否在进步。过年期间没事时，又看了一遍黎明之前跟大秦帝国，觉得自己能够对人物之间的解读突然上了一个层次，而这是突然发现的，所以想通过平时记录一些时事，一做学习之余的消遣，二为以后反思提供资料。</p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>简言之，<strong><a href="https://screw1024.github.io/">本站</a></strong>是一个记录技术和思考的原创个人博客。</p><p>现阶段主要是计算机方面的一些总结，可以获得成就奖嘛😜。以后打算走GIS开发路线，如果能够顺利，希望以后能够有机会写一些GIS方面的总结，因为本人能力有限，在学校阶段主要精力放在了计算机上了。</p><p>文章中如若发现错误或不当言论，还望您不吝赐教。</p><h4 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h4><p>在校生，刚把前端基础学的差不多（顺带说下，通过搭建本站终于懂了node的模块化的好处了）。目前正在学Python，想学习一下Django以及爬虫，这些都是以后web gis的技术要求。</p><blockquote><p>技术交流、开车交友请右转找微信小图标🙃</p></blockquote>]]></content>
      
    </entry>
    
    
  
</search>
